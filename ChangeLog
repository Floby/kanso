2011.06.24, Version 0.0.7

* Dropped support for CouchDB < 1.1

* Fixed default rewrites for changes in CouchDB 1.1

* Renamed timestamp field to createdTime - BACKWARDS INCOMPATIBLE - please
  make sure you change all references to fields.timestamp in your apps to
  fields.createdTime.

* Changes to db module:

  * Some db module functions now expect a JSON mime-type as the response and
    return an error if another type is used

  * Added deleteUser method to db module

  * Added getReplication, stopReplication, waitReplication, and startReplication
    functions to db module. These functions are designed to work with the
    _replicator database in CouchDB 1.1

  * Added createDatabase and deleteDatabase to db module

  * Fixed some document ID encoding issues in db module

  * Added getList, getShow and getRewrite functions to db module

  * Added tests for some db module functions

  * Allow caller to specify CouchdB database to use in saveDoc, getDoc and
    removeDoc

* Changes to utils module:

  * Added redirect method to utils

  * setPropertyPath and getPropertyPath in utils now accept strings as well as
    arrays

  * Added isSubPath to utils module

  * isBrowser is now a function returning a Boolean, not a Boolean property
    itself - BACKWARDS INCOMPATIBLE CHANGE


* Added a testsuite app so kanso's commonjs module tests will run in the browser

* Big Forms and widgets rewrite to make complex embedded fields more portable
  and flexible - BACKWARDS INCOMPATIBLE CHANGE - custom widgets and form
  renderers will need to be updated to use the new API
   
  * Update form.validate to also run permissions checks

  * Add ability to exclude fields from a form when initialized using a Type
    definition

  * Added a new documentSelector widget for referring to external documents.

  * Decoupled embedList and embed from administrative application; widgets now
    use a well-defined interface for client-side setup.

  * Decoupled the modal dialog from embedList via a new actions module.
  
  * Decoupled embedded form from the modal dialog via an embedForm widget.

* Removed History.js dependency and integrated HTML5 history handling using
  pushState only - BACKWARDS INCOMPATIBLE CHANGE - older browsers will see
  some degradtion in performance

* Skip unsafe requests when clicking back button if possible, warn otherwise
  (previously Kanso was repeating unsafe requests such as POST, PUT and DELETE
  without warning)

* Added new events module - BACKWARDS INCOMPATIBLE CHANGE - changed the way init
  and sessionChange events are bound. Create a new project skeleton for
  example usage.

  * Added support for user-defined custom events

  * Added beforeResource, beforeRequest, beforeResponseStart, beforeResponseData
    and afterResponse events

* Added new website with extra guides, an updated tutorial and auto-generated
  API documentation

* Fixed a few small bugs in Admin app

* Assume http://127.0.0.1:5984 if host and port are not specified when using
  command-line tool. Than means you can push to 'dbname' by doing:
  "kanso push dbname" instead of "kanso push http://127.0.0.1:5984/dbname"

* Added short-hand response style, allowing you to return
  {title: '...', content: '...'} from a list, show or update function and
  kanso will do the right thing depending on whether its running client-side
  or server-side. See the new tutorial for example usage.

* Obey redirects returned from list, show and update functions, see new
  tutorial for example usage

* Automatically save documents returned from update function when run in the
  browser, see new tutorial for example usage

* Added sanitize module and did some anti-XSS work

* Made it easier to share code between the normal app modules and CouchDB
  views, see new guide on sharing code with views for more info

* Added transform action to command-line tool for working with data on the
  filesystem before importing, allowing you to convert from .csv to .json and
  add or clear CouchDB _id properties to documents. See the new "working with
  data" guide for more info

* Added new streaming JSON parsing to pushdata and transform commands for
  handling large files


2011.05.21, Version 0.0.6

* Better support for encoding unusual document ids and other parameters in db module

* Update db.request so responses are only parsed as JSON if the Content-Type
of the response is application/json

* In the db module, JSON parsing errors are now passed to callbacks

* Make most db function query parameters optional

* Added array and numberArray fields

* Added computed widget (displays the data but is not editable)

* Bug fix for creator field when used at a sub-level of a document

* Push support for upcoming node v0.5.0 release

* Updated querystring module with latest code from node.js

* Added getShow, getList and getRewrite functions to db module, thanks to
Gabor Ratky (https://github.com/rgabo)

* Fixed a number of admin app issues:

  * Fixed icons, thanks to Steven Hammond (https://github.com/shammond42)

  * Now displays view results with reduce=false by default

  * Fixed alternating row colours in view results

  * Updated display_name for types to accept string or path to field as well
  as functions, thanks to Steven Hammond (https://github.com/shammond42)

  * If available, use display_name instead of id when viewing a document, thanks
  to Steven Hammond (https://github.com/shammond42)

  * Fixed bug in types list view where 'show more' link wouldn't work, thanks
  to Steven Hammond (https://github.com/shammond42)

  * Nicer headings and link text, capitalizing and replacing underscores with
  spaces as form fields do

  * Admin app now displays widget hints and field / type descriptions

  * Added admin app to 'make lint' targets


2011.05.10, Version 0.0.5

* Added autopush command

* Added -v and --version flags

* Fixed underscore bug in admin app


2011.05.08, Version 0.0.4

* Added HTTPS support for pushing apps

* Links without a href attribute are now ignored (as the browser would)

* Fixed race-condition when clicking on links in quick succession

* Added a catch-all rewrite to a 404.html template in the project skeleton

* The isBrowser, initial_hit and userCtx properties are longer exported from core

* Form values are no longer cleared in admin app when logging in/out, or after
  a permisions error

* Fixed a bug matching splats in URL rewrites

* Check user's session for changes when db calls result in 'Unauthorized'

* Fixed some JSLint issues

* Update History.js for admin app - fixes links in browsers without pushState
support
